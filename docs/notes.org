* c++ suspicion                                             jun 12 2020
=> c++
I'm going to refrain from using a large part of the c++ language because I plan
on rewriting this in backbone.

Here are some parts I think are suspicious, and thus are not going to be in backbone:
- constructors, destructors
  - tying together allocation and initialization is bad
  - it makes it so that you have weird problems with references and move
    semantics
    - e.g. when you delete an element of the array, you need to destroy it but not
      de-allocate it.  thus you get "in-place delete".
  - thus there's no RAII
- inheritance
  - inheritance bad
  - virtual bad

By avoiding these two things, we don't have to deal with the "rule of 3" (or
5).  We do have to think a little harder about memory management, but I believe
that being careful initially will save us the headache of looking at c++
template pointer error output in the future (delete an element in a vector of a
inherited type).


* chdir can't be in shell                                   jun 11 2020
=> menu
- git commit: db660aa247d67a02a7f80170238763a621854fec

To make a menu, you have to pass in a function table that will handle different
kinds of buttons on the menu.

Each button has its first child, a visual representation, which currently should
be an atomic Texp because each button is expected to sit on a single line.

The second child is a /command/.  The value of the command tells the menu which
function from the function table to use.  It indexes the function table to get
the function, called the /handler/, and then it calls that function.  It calls
the function with its first and only child as the argument.  Thus the function should be of the
type =Texp -> void= in the host language.

The =shell= command type calls =man 3 system()= with the argument, expected to
be a atomic string.  =system= calls =fork=, thus the shell command does not
execute in the current process, but in the child process.  What we want is
for it to call =man 2 chdir= in the current process, so we'll just create an
=man 1 cd= specific handler that simply calls =chdir=.
